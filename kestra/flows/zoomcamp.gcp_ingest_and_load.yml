id: gcp_ingest_and_load
namespace: zoomcamp
description: |
  Best to add a label `backfill:true` from the UI to track executions created via a backfill.
  CSV data used here comes from: https://www.kaggle.com/api/v1/datasets/download/sebastianwillmann/beverage-sales

variables:
  data_name: "synthetic_beverage_sales_data"
  file: "{{render(vars.data_name)}}.csv"
  gcs_file: "gs://{{kv('GCP_BUCKET_NAME')}}/{{vars.file}}"
  table: "{{kv('GCP_DATASET')}}.{{render(vars.data_name)}}"
  data: "{{outputs.extract.outputFiles['synthetic_beverage_sales_data.csv']}}"

tasks:
  - id: set_label
    type: io.kestra.plugin.core.execution.Labels
    labels:
      file: "{{render(vars.file)}}"

  - id: extract
    type: io.kestra.plugin.scripts.shell.Commands
    outputFiles:
      - "*.csv"
    taskRunner:
      type: io.kestra.plugin.core.runner.Process
    commands:
      - curl -L -o /tmp/file.zip https://www.kaggle.com/api/v1/datasets/download/sebastianwillmann/beverage-sales
      - unzip /tmp/file.zip -d ./

  - id: upload_to_gcs
    type: io.kestra.plugin.gcp.gcs.Upload
    from: "{{render(vars.data)}}"
    to: "{{render(vars.gcs_file)}}"

  - id: bq_table
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE TABLE IF NOT EXISTS `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}`
      (
          unique_row_id BYTES OPTIONS (description = 'A unique identifier for the order, generated by hashing key trip attributes.'),
          Order_ID STRING OPTIONS (description = 'Order ID'),
          Customer_ID STRING OPTIONS (description = 'Customer ID'),
          Customer_Type STRING OPTIONS (description = 'Customer Type. 1= B2B 2= B2C'),
          Product STRING OPTIONS (description = 'Product details'),
          Category STRING OPTIONS (description = 'Category details'),
          Unit_Price NUMERIC OPTIONS (description = 'Unit price of product'),
          Quantity NUMERIC OPTIONS (description = 'Quantity of product'),
          Discount NUMERIC OPTIONS (description = 'Discount on product'),
          Total_Price NUMERIC OPTIONS (description = 'Total price'),
          Region STRING OPTIONS (description = 'Region Name'),
          Order_Date DATE OPTIONS (description = 'Order Date')
      )
      PARTITION BY Order_Date;

  - id: bq_external_table
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE OR REPLACE EXTERNAL TABLE `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}_ext`
      (
          Order_ID STRING OPTIONS (description = 'Order ID'),
          Customer_ID STRING OPTIONS (description = 'Customer ID'),
          Customer_Type STRING OPTIONS (description = 'Customer Type. 1= B2B 2= B2C'),
          Product STRING OPTIONS (description = 'Product details'),
          Category STRING OPTIONS (description = 'Category details'),
          Unit_Price NUMERIC OPTIONS (description = 'Unit price of product'),
          Quantity NUMERIC OPTIONS (description = 'Quantity of product'),
          Discount NUMERIC OPTIONS (description = 'Discount on product'),
          Total_Price NUMERIC OPTIONS (description = 'Total price'),
          Region STRING OPTIONS (description = 'Region Name'),
          Order_Date DATE OPTIONS (description = 'Order Date')
      )
      OPTIONS (
          format = 'CSV',
          uris = ['{{render(vars.gcs_file)}}'],
          skip_leading_rows = 1,
          ignore_unknown_values = TRUE
      );

  - id: bq_populate
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      CREATE OR REPLACE TABLE `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}`
      PARTITION BY Order_Date
      AS
      SELECT
        MD5(CONCAT(
          COALESCE(CAST(Order_ID AS STRING), ""),
          COALESCE(CAST(Customer_ID AS STRING), "")
        )) AS unique_row_id,
        *
      FROM `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}_ext`;

  - id: purge_files
    type: io.kestra.plugin.core.storage.PurgeCurrentExecutionFiles
    description: To avoid cluttering your storage, we will remove the downloaded files

pluginDefaults:
  - type: io.kestra.plugin.gcp
    values:
      serviceAccount: "{{kv('GCP_CREDS')}}"
      projectId: "{{kv('GCP_PROJECT_ID')}}"
      location: "{{kv('GCP_LOCATION')}}"
      bucket: "{{kv('GCP_BUCKET_NAME')}}"
